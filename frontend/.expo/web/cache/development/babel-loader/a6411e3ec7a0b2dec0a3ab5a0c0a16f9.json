{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Login(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nombre = _useState2[0],\n      setNombre = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isadmin = _useState6[0],\n      setisadmin = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      shown = _useState8[0],\n      setShown = _useState8[1];\n\n  function Submit() {\n    axios.post('http://192.168.43.120:8080/api/auth/signin', {\n      username: nombre,\n      password: password\n    }).then(function (res) {\n      props.navigation.navigate(\"Map\");\n\n      if (res.data.roles[0] == \"ROLE_ADMIN\") {\n        setisadmin(true);\n        props.navigation.navigate(\"Map\");\n      }\n    }).catch(function (error) {\n      alert(\"Usuario no encontrado\");\n      props.navigation.navigate(\"Home\");\n    });\n  }\n\n  var switchShown = function switchShown() {\n    return setShown(!shown);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Image, {\n        style: {\n          width: 100,\n          height: 100,\n          alignItems: 'center'\n        },\n        source: require(\"../assets/def.png\")\n      }), _jsx(Text, {\n        style: {\n          color: '#333333',\n          fontWeight: 'bold',\n          fontFamily: 'Baskerville-Bold',\n          fontSize: 30\n        },\n        children: \"Hi-Go!\"\n      })]\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Username...\",\n      value: nombre,\n      onChangeText: function onChangeText(text) {\n        return setNombre(text);\n      }\n    }), _jsx(TextInput, {\n      type: \"password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        setPassword(text);\n      }\n    }), _jsx(TouchableHighlight, {\n      style: styles.button,\n      onPress: function onPress() {\n        return mostrar();\n      },\n      children: _jsx(Text, {\n        style: styles.textButton,\n        children: \"Mostrar\"\n      })\n    }), _jsx(TouchableHighlight, {\n      style: styles.button,\n      onPress: function onPress() {\n        return Submit();\n      },\n      children: _jsx(Text, {\n        style: styles.textButton,\n        children: \"Log in\"\n      })\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#3EA9FA',\n    justifyContent: 'space-around',\n    padding: 15\n  },\n  header: {\n    justifyContent: 'space-around',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    padding: 15,\n    margin: 10,\n    backgroundColor: 'white',\n    color: 'black',\n    borderWidth: 3,\n    borderColor: 'black',\n    fontSize: 25,\n    fontWeight: 'bold',\n    fontFamily: 'Times New Roman'\n  },\n  button: {\n    alignSelf: 'center',\n    width: 242,\n    height: 60,\n    bottom: 15,\n    borderRadius: 50,\n    backgroundColor: '#333333',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textButton: {\n    color: '#FEFAE0',\n    fontWeight: 'bold',\n    fontFamily: 'AmericanTypewriter-Bold',\n    fontSize: 40\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/Hp/Desktop/Sprint 3/backend-sql-db/frontend/src/views/Login.js"],"names":["React","useEffect","useState","axios","Login","props","nombre","setNombre","password","setPassword","isadmin","setisadmin","shown","setShown","Submit","post","username","then","res","navigation","navigate","data","roles","catch","error","alert","switchShown","styles","container","header","width","height","alignItems","require","color","fontWeight","fontFamily","fontSize","input","text","button","mostrar","textButton","StyleSheet","create","flex","backgroundColor","justifyContent","padding","flexDirection","margin","borderWidth","borderColor","alignSelf","bottom","borderRadius"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { View, Text, TextInput, StyleSheet, TouchableHighlight, Image } from 'react-native';\r\n\r\n\r\nexport function Login(props) {\r\n    const [nombre, setNombre] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const[isadmin, setisadmin] =useState(false);\r\n    const[shown, setShown] = useState(false);\r\n    \r\n\r\n    function Submit (){\r\n        \r\n        axios.post('http://192.168.43.120:8080/api/auth/signin', {username: nombre,\r\n        password: password})\r\n        .then(res => {  \r\n            props.navigation.navigate(\"Map\")\r\n             \r\n             if(res.data.roles[0]== \"ROLE_ADMIN\"){\r\n                setisadmin(true)\r\n                props.navigation.navigate(\"Map\")\r\n\r\n             }\r\n            \r\n          } \r\n         \r\n          )  \r\n          .catch(error=>{\r\n            alert(\"Usuario no encontrado\")\r\n            props.navigation.navigate(\"Home\")\r\n\r\n          })\r\n    }\r\n\r\n    const switchShown = () => setShown(!shown);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.header}>\r\n                <Image style={{ width: 100, height: 100, alignItems: 'center' }} source={require('../assets/def.png')} />\r\n                <Text\r\n                    style={{ color: '#333333', fontWeight: 'bold', fontFamily: 'Baskerville-Bold', fontSize: 30 }}>\r\n                    Hi-Go!\r\n                </Text>\r\n            </View>\r\n\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Username...\"\r\n                value={nombre}\r\n                onChangeText={(text) => setNombre(text)}\r\n            />\r\n            <TextInput\r\n                //style={styles.input}\r\n                type=\"password\"\r\n                //pattern=\".{6,}\"\r\n               // placeholder=\"Contraseña...\"\r\n                value={password}\r\n                onChangeText={(text) =>{ setPassword(text);}}\r\n            />\r\n\r\n            <TouchableHighlight style={styles.button} onPress={() => mostrar()}>\r\n            <Text style={styles.textButton}>Mostrar</Text>\r\n            </TouchableHighlight>\r\n\r\n            <TouchableHighlight style={styles.button} onPress={() => Submit()}>\r\n                <Text style={styles.textButton}>Log in</Text>\r\n            </TouchableHighlight>\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#3EA9FA',\r\n        // alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        padding: 15\r\n    },\r\n    header: {\r\n        justifyContent: 'space-around',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        padding: 15,\r\n        margin: 10,\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        borderWidth: 3,\r\n        borderColor: 'black',\r\n        fontSize: 25,\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Times New Roman'\r\n        // textAlign: 'center'\r\n    },\r\n    button: {\r\n        alignSelf:'center',\r\n        width: 242,\r\n        height: 60,\r\n        bottom: 15,\r\n        borderRadius: 50,\r\n        backgroundColor: '#333333',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    textButton: {\r\n        color: '#FEFAE0',\r\n        fontWeight: 'bold',\r\n        fontFamily: 'AmericanTypewriter-Bold',\r\n        fontSize: 40\r\n    }\r\n});\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}