{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nLogBox.ignoreLogs(['expo-permissions is now deprecated']);\nLogBox.ignoreLogs(['Failed prop type']);\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from 'react-native-maps';\nimport { mapStyle } from \"./mapStyle\";\nimport { default as Bici } from \"../assets/vmps/BiciDisp.png\";\nimport { default as BiciNo } from \"../assets/vmps/BiciNoDisp.png\";\nimport { default as Patinete } from \"../assets/vmps/patineteDisp.png\";\nimport { default as PatineteNo } from \"../assets/vmps/patineteNoDisp.png\";\nimport * as Permissions from 'expo-permissions';\nimport * as Location from 'expo-location';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Map(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      MARKERS_DATA = _useState4[0],\n      setMarkers = _useState4[1];\n\n  var isadmin = props.isadmin;\n  return _jsx(View, {\n    children: _jsxs(TouchableHighlight, {\n      onPress: function onPress() {\n        return props.navigation.navigate(\"User\");\n      },\n      children: [\"//                             \", _jsx(Image, {\n        style: {\n          width: 50,\n          height: 50,\n          alignItems: 'center'\n        },\n        source: require(\"../assets/Avatar.png\")\n      }), \"//                         \"]\n    })\n  });\n}\nexport default Map;","map":{"version":3,"sources":["C:/Users/Hp/Desktop/Sprint 3/backend-sql-db/frontend/src/views/Map.js"],"names":["React","useEffect","useState","axios","LogBox","ignoreLogs","MapView","PROVIDER_GOOGLE","Marker","mapStyle","default","Bici","BiciNo","Patinete","PatineteNo","Permissions","Location","Map","props","loading","setLoading","MARKERS_DATA","setMarkers","isadmin","navigation","navigate","width","height","alignItems","require"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGAC,MAAM,CAACC,UAAP,CAAkB,CAAC,oCAAD,CAAlB;AACAD,MAAM,CAACC,UAAP,CAAkB,CAAC,kBAAD,CAAlB;;;;;;;;;AAMA,OAAOC,OAAP,IAAkBC,eAAlB,EAAmCC,MAAnC,QAAiD,mBAAjD;AACA,SAASC,QAAT;AACA,SAASC,OAAO,IAAIC,IAApB;AACA,SAASD,OAAO,IAAIE,MAApB;AACA,SAASF,OAAO,IAAIG,QAApB;AACA,SAASH,OAAO,IAAII,UAApB;AAGA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;;AAGA,OAAO,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACvB,kBAA8BhB,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOiB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAmClB,QAAQ,CAAC,EAAD,CAA3C;AAAA;AAAA,MAAOmB,YAAP;AAAA,MAAqBC,UAArB;;AACA,MAAMC,OAAO,GAAGL,KAAK,CAACK,OAAtB;AA6BC,SACI,KAAC,IAAD;AAAA,cACI,MAAC,kBAAD;AAAoB,MAAA,OAAO,EAAE;AAAA,eAAML,KAAK,CAACM,UAAN,CAAiBC,QAAjB,CAA0B,MAA1B,CAAN;AAAA,OAA7B;AAAA,oDACkB,KAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,MAAM,EAAE,EAArB;AAAyBC,UAAAA,UAAU,EAAE;AAArC,SAAd;AAA+D,QAAA,MAAM,EAAEC,OAAO;AAA9E,QADlB;AAAA;AADJ,IADJ;AA8LJ;AAEA,eAAeZ,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { LogBox } from 'react-native';\r\nLogBox.ignoreLogs(['expo-permissions is now deprecated']);\r\nLogBox.ignoreLogs(['Failed prop type']);\r\n\r\nimport { View, Text, TextInput, TouchableHighlight, Image, Alert } from 'react-native';\r\n\r\n// Mapa google maps\r\nimport { StyleSheet, Dimensions } from 'react-native';\r\nimport MapView, { PROVIDER_GOOGLE, Marker } from 'react-native-maps';\r\nimport { mapStyle } from './mapStyle';\r\nimport { default as Bici } from '../assets/vmps/BiciDisp.png';\r\nimport { default as BiciNo } from '../assets/vmps/BiciNoDisp.png';\r\nimport { default as Patinete } from '../assets/vmps/patineteDisp.png';\r\nimport { default as PatineteNo } from '../assets/vmps/patineteNoDisp.png';\r\n\r\n// Geolocalización usuarios\r\nimport * as Permissions from 'expo-permissions'\r\nimport * as Location from 'expo-location'\r\n\r\n//FUNCIÓN: MAPA GOOGLE MAPS\r\nexport function Map(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [MARKERS_DATA, setMarkers] = useState([]);\r\n    const isadmin = props.isadmin;\r\n   \r\n\r\n    // useEffect(() => {\r\n    //     (async () => {\r\n    //         const response = await getCurrentLocation()\r\n    //         if (response.status) {\r\n    //             //setLocationMapa(response.location)\r\n    //             console.log(response.location)\r\n    //         }\r\n    //     })()\r\n    //     let isApiSubscribed = true;\r\n    //     axios.get(\"http://192.168.1.127:8080/api/v1/vehiculos\").then((response) => {\r\n    //         if (isApiSubscribed) {\r\n    //             setMarkers(response.data);\r\n    //             setLoading(false);\r\n    //         }\r\n    //     });\r\n    //     return () => {\r\n    //         isApiSubscribed = false;\r\n    //     }\r\n    // }, []);\r\n\r\n    // async function getVehiculos() {\r\n    //     const res = await axios.get(\"http://192.168.1.127:8080/api/v1/vehiculo/1\");\r\n    //     console.log(res.data);\r\n    //     return res.data;\r\n    // }\r\n\r\n     return (\r\n         <View>\r\n             <TouchableHighlight onPress={() => props.navigation.navigate(\"User\")}>\r\n//                             <Image style={{ width: 50, height: 50, alignItems: 'center' }} source={require('../assets/Avatar.png')} />\r\n//                         </TouchableHighlight>\r\n         </View>\r\n     )\r\n     \r\n//             <View style={styles.container}>\r\n//                 <View style={styles.header}>\r\n//                     {/* <Image style={{ width: 100, height: 100, alignItems: 'center' }} source={require('../assets/def.png')} />\r\n//                     <Text\r\n//                         style={{ color: '#333333', fontWeight: 'bold', fontFamily: 'Baskerville-Bold', fontSize: 30 }}>\r\n//                         Hi-Go!\r\n//                     </Text> */}\r\n//                     <View style={styles.profiles}>\r\n//                         {/* <TouchableHighlight onPress={() => props.navigation.navigate(\"User\")}>\r\n//                             <Image style={{ width: 50, height: 50, alignItems: 'center' }} source={require('../assets/Avatar.png')} />\r\n//                         </TouchableHighlight> */}\r\n//                         {/* <TouchableHighlight style={styles.button} onPress={() => props.navigation.navigate(\"User\")}>\r\n//                             <Text style={styles.texto} >user</Text>\r\n//                         </TouchableHighlight> */}\r\n\r\n//                     <TouchableHighlight style={styles.button} onPress={() =>\r\n//                      props.navigation.navigate(\"User\")\r\n//                      }>\r\n//                      <Text style={styles.textButton}>User</Text>\r\n//                      </TouchableHighlight>\r\n\r\n//                         {/* <TouchableHighlight onPress={() => props.navigation.navigate(\"User\")}>\r\n//                                 <View style={styles.user}>\r\n//                                     <Image style={{ width: 50, height: 50, alignItems: 'center' }} source={require('../assets/Avatar.png')} />\r\n//                                     <View style={styles.conTexto}>\r\n//                                         <Text style={styles.texto}>User</Text>\r\n//                                     </View>\r\n//                                 </View>\r\n//                          </TouchableHighlight>\r\n\r\n//                         <View style={styles.admin}>\r\n//                             <TouchableHighlight onPress={() => props.navigation.navigate(\"Admin\")}>\r\n//                                 <View style={styles.admin}>\r\n//                                     <Image style={{ width: 50, height: 50, alignItems: 'center' }} source={require('../assets/admin.png')} />\r\n//                                     <View style={styles.conTexto}>\r\n//                                         <Text style={styles.texto}>Admin</Text>\r\n//                                     </View>\r\n//                                 </View>\r\n//                             </TouchableHighlight>\r\n//                         </View> */}\r\n//                     </View>\r\n//                 </View>\r\n\r\n//                 {/* <MapView\r\n//                     customMapStyle={mapStyle}\r\n//                     provider={PROVIDER_GOOGLE}\r\n//                     style={styles.mapStyle}\r\n//                     initialRegion={{\r\n//                         latitude: 40.45315837994751,\r\n//                         longitude: -3.7266484767199968,\r\n//                         latitudeDelta: 0.003,\r\n//                         longitudeDelta: 0.003,\r\n//                     }}\r\n//                     mapType=\"standard\"\r\n//                     showsUserLocation={true}\r\n//                 >\r\n//                     <Marker\r\n//                         coordinate={{\r\n//                             latitude: Location.latitude,\r\n//                             longitude: Location.longitude\r\n//                         }}\r\n//                         draggable\r\n//                     />\r\n//                     {MARKERS_DATA.map((marker) => (\r\n//                         <Marker\r\n//                             key={marker.id}\r\n//                             coordinate={{\r\n//                                 latitude: marker.latitud,\r\n//                                 longitude: marker.longitud,\r\n//                             }}\r\n//                             onPress={() => marker.libre ?\r\n//                                 (marker.tipo === \"bike\" ?\r\n//                                     props.navigation.navigate(\"BikeInfo\", { id: marker.id, tipo: marker.tipo }) :\r\n//                                     props.navigation.navigate(\"PatineteInfo\", { id: marker.id, tipo: marker.tipo })\r\n//                                 ) : props.navigation.navigate(\"noDisponible\")}\r\n//                             style={styles.marker}\r\n//                         // opacity={marker.libre ? 1.0 : 0.0}\r\n//                         >\r\n//                             <View style={{ width: 50 }}>\r\n//                                 <Image source={\r\n//                                     marker.libre ?\r\n//                                         marker.tipo === 'bike' ? Bici : Patinete\r\n//                                         : marker.tipo === 'bike' ? BiciNo : PatineteNo\r\n//                                 } />\r\n//                             </View>\r\n//                         </Marker>\r\n//                     ))} */}\r\n\r\n//                     {/* <TouchableHighlight style={styles.button} onPress={() => props.navigation.navigate(\"QR\")}>\r\n//                         <Text style={styles.textButton} >Leer QR</Text>\r\n//                     </TouchableHighlight> */}\r\n                    \r\n\r\n\r\n//                 {/* </MapView> */}\r\n//             </View>\r\n//         );\r\n//     };\r\n//  }\r\n\r\n// //GEOLOCALIZACIÓN DE LOS USUARIOS\r\n// export const getCurrentLocation = async () => {\r\n//     const response = { status: false, location: null }\r\n//     const resultPermissions = await Permissions.askAsync(Permissions.LOCATION)\r\n//     if (resultPermissions.status === \"denied\") {\r\n//         alert(\"Debes dar permisos para la localización.\")\r\n//         return response\r\n//     }\r\n//     const position = await Location.getCurrentPositionAsync({})\r\n//     const location = {\r\n//         latitude: position.coords.latitude,\r\n//         longitude: position.coords.longitude,\r\n//         latitudeDelta: 0.001,\r\n//         longitudeDelta: 0.001\r\n//     }\r\n//     response.status = true\r\n//     response.location = location\r\n//     return response\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         flex: 1,\r\n//         backgroundColor: '#3EA9FA',\r\n//         // alignItems: 'center',\r\n//         justifyContent: 'space-around',\r\n//         // padding: 15\r\n//     },\r\n//     header: {\r\n//         justifyContent: 'space-around',\r\n//         flexDirection: 'row',\r\n//         alignItems: 'center',\r\n//     },\r\n//     mapStyle: {\r\n//         width: Dimensions.get('window').width,\r\n//         //   height: Dimensions.get('window').height,\r\n//         height: 700\r\n//     },\r\n//     marker: {\r\n//         width: 500\r\n//     },\r\n//     profiles: {\r\n//         flexDirection: 'row',\r\n//         justifyContent: 'space-between'\r\n//     },\r\n//     admin: {\r\n//         alignItems: 'center',\r\n//         flexDirection: 'column'\r\n//     },\r\n//     conTexto: {\r\n//         top: 5,\r\n//         borderRadius: 50,\r\n//         padding: 5,\r\n//         backgroundColor: '#333333',\r\n//         alignItems: 'center',\r\n//         justifyContent: 'center'\r\n//     },\r\n//     texto: {\r\n//         color: '#FEFAE0',\r\n//         fontWeight: 'bold',\r\n//         fontFamily: 'AmericanTypewriter-Bold',\r\n//         fontSize: 15\r\n//     },\r\n//     button: {\r\n//         alignSelf: 'center',\r\n//         width: 250,\r\n//         height: 60,\r\n//         top: Dimensions.get(\"window\").height * 0.6,\r\n//         bottom: 15,\r\n//         borderRadius: 50,\r\n//         backgroundColor: '#fefae0',\r\n//         alignItems: 'center',\r\n//         justifyContent: 'center',\r\n//         marginBottom: 25\r\n//     },\r\n//     textButton: {\r\n//         color: '#333333',\r\n//         fontWeight: 'bold',\r\n//         fontFamily: 'AmericanTypewriter-Bold',\r\n//         fontSize: 35\r\n//     }\r\n// });\r\n}\r\n\r\n export default Map;"]},"metadata":{},"sourceType":"module"}